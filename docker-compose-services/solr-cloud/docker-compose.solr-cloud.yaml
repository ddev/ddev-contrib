# DDev Solr Cloud recipe file.
#
# To access Solr after it is installed:
# - The Solr admin interface will be accessible at:
#   http://<projectname>.ddev.site:8983/solr/
#   For example, if the project is named "myproject" the hostname will be:
#   http://myproject.ddev.site:8983/solr/
# - To access the Solr container from the web container use:
#   http://myproject.ddev.site:8983/solr/
#
# To use this in your own project:
# 1. Copy this file and the solr-cloud (including security.json) directory to your project's ".ddev" directory.
# 2. For Drupal:
#      - activate the search_api_solr_admin (this sub-module included in Search API Solr >= 4.2.1)
#      - create a search server using the Solr Cloud Connector with Basic Auth using username "solr" and password
#        "SolrRocks".
#      - press the "Upload Configset" button.

version: '3.6'
services:
  solr1:
    image: solr:8
    container_name: ddev-${DDEV_SITENAME}-solr1
    restart: "no"
    expose:
      - 8983
    labels:
      com.ddev.site-name: ${DDEV_SITENAME}
      com.ddev.approot: $DDEV_APPROOT
    environment:
      # The pre-trained OpenNLP models require a much bigger buffer.
      SOLR_OPTS: -Djute.maxbuffer=50000000
      ZK_HOST: ddev-${DDEV_SITENAME}-zoo1:2181,ddev-${DDEV_SITENAME}-zoo2:2181,ddev-${DDEV_SITENAME}-zoo3:2181
      VIRTUAL_HOST: $DDEV_HOSTNAME
      HTTP_EXPOSE: 8983:8983
      HTTPS_EXPOSE: 8993:8983
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    volumes:
      - ./solr-cloud/security.json:/var/security.json
      - .:/mnt/ddev_config
      - solr1:/var/solr
    command: bash -c "docker-entrypoint.sh solr zk cp file:/var/security.json zk:/security.json && exec solr-foreground"

  solr2:
    image: solr:8
    container_name: ddev-${DDEV_SITENAME}-solr2
    restart: "no"
    expose:
      - 8984
    labels:
      com.ddev.site-name: ${DDEV_SITENAME}
      com.ddev.approot: $DDEV_APPROOT
    environment:
      SOLR_PORT: 8984
      # The pre-trained OpenNLP models require a much bigger buffer.
      SOLR_OPTS: -Djute.maxbuffer=50000000
      ZK_HOST: ddev-${DDEV_SITENAME}-zoo1:2181,ddev-${DDEV_SITENAME}-zoo2:2181,ddev-${DDEV_SITENAME}-zoo3:2181
      VIRTUAL_HOST: $DDEV_HOSTNAME
      HTTP_EXPOSE: 8984:8984
      HTTPS_EXPOSE: 8994:8984
    depends_on:
      - solr1
    volumes:
      - .:/mnt/ddev_config
      - solr2:/var/solr

  solr3:
    image: solr:8
    container_name: ddev-${DDEV_SITENAME}-solr3
    restart: "no"
    expose:
      - 8985
    # These labels ensure this service is discoverable by ddev.
    labels:
      com.ddev.site-name: ${DDEV_SITENAME}
      com.ddev.approot: $DDEV_APPROOT
    environment:
      SOLR_PORT: 8985
      # The pre-trained OpenNLP models require a much bigger buffer.
      SOLR_OPTS: -Djute.maxbuffer=50000000
      ZK_HOST: ddev-${DDEV_SITENAME}-zoo1:2181,ddev-${DDEV_SITENAME}-zoo2:2181,ddev-${DDEV_SITENAME}-zoo3:2181
      VIRTUAL_HOST: $DDEV_HOSTNAME
      HTTP_EXPOSE: 8985:8985
      HTTPS_EXPOSE: 8995:8985
    depends_on:
      - solr1
    volumes:
      - .:/mnt/ddev_config
      - solr3:/var/solr

  zoo1:
    image: zookeeper:3.6
    container_name: ddev-${DDEV_SITENAME}-zoo1
    hostname: ddev-${DDEV_SITENAME}-zoo1
    restart: always
    expose:
      - 2181
      - 7000
    environment:
      # The pre-trained OpenNLP models require a much bigger buffer.
      JVMFLAGS: -Djute.maxbuffer=50000000
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=ddev-${DDEV_SITENAME}-zoo1:2888:3888;2181 server.2=ddev-${DDEV_SITENAME}-zoo2:2888:3888;2181 server.3=ddev-${DDEV_SITENAME}-zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - .:/mnt/ddev_config

  zoo2:
    image: zookeeper:3.6
    container_name: ddev-${DDEV_SITENAME}-zoo2
    hostname: ddev-${DDEV_SITENAME}-zoo2
    restart: always
    expose:
      - 2181
      - 7000
    environment:
      # The pre-trained OpenNLP models require a much bigger buffer.
      JVMFLAGS: -Djute.maxbuffer=50000000
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=ddev-${DDEV_SITENAME}-zoo1:2888:3888;2181 server.2=ddev-${DDEV_SITENAME}-zoo2:2888:3888;2181 server.3=ddev-${DDEV_SITENAME}-zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - .:/mnt/ddev_config

  zoo3:
    image: zookeeper:3.6
    container_name: ddev-${DDEV_SITENAME}-zoo3
    hostname: ddev-${DDEV_SITENAME}-zoo3
    restart: always
    expose:
      - 2181
      - 7000
    environment:
      # The pre-trained OpenNLP models require a much bigger buffer.
      JVMFLAGS: -Djute.maxbuffer=50000000
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=ddev-${DDEV_SITENAME}-zoo1:2888:3888;2181 server.2=ddev-${DDEV_SITENAME}-zoo2:2888:3888;2181 server.3=ddev-${DDEV_SITENAME}-zoo3:2888:3888;2181
      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
    volumes:
      - .:/mnt/ddev_config

volumes:
  solr1:
  solr2:
  solr3:
